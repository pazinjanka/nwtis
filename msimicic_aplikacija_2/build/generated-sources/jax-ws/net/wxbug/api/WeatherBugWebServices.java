
package net.wxbug.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "WeatherBugWebServices", targetNamespace = "http://api.wxbug.net/", wsdlLocation = "http://api.wxbug.net/weatherservice.asmx?WSDL")
public class WeatherBugWebServices
    extends Service
{

    private final static URL WEATHERBUGWEBSERVICES_WSDL_LOCATION;
    private final static WebServiceException WEATHERBUGWEBSERVICES_EXCEPTION;
    private final static QName WEATHERBUGWEBSERVICES_QNAME = new QName("http://api.wxbug.net/", "WeatherBugWebServices");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://api.wxbug.net/weatherservice.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEATHERBUGWEBSERVICES_WSDL_LOCATION = url;
        WEATHERBUGWEBSERVICES_EXCEPTION = e;
    }

    public WeatherBugWebServices() {
        super(__getWsdlLocation(), WEATHERBUGWEBSERVICES_QNAME);
    }

    public WeatherBugWebServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns WeatherBugWebServicesSoap
     */
    @WebEndpoint(name = "WeatherBugWebServicesSoap")
    public WeatherBugWebServicesSoap getWeatherBugWebServicesSoap() {
        return super.getPort(new QName("http://api.wxbug.net/", "WeatherBugWebServicesSoap"), WeatherBugWebServicesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WeatherBugWebServicesSoap
     */
    @WebEndpoint(name = "WeatherBugWebServicesSoap")
    public WeatherBugWebServicesSoap getWeatherBugWebServicesSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://api.wxbug.net/", "WeatherBugWebServicesSoap"), WeatherBugWebServicesSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns WeatherBugWebServicesSoap
     */
    @WebEndpoint(name = "WeatherBugWebServicesSoap12")
    public WeatherBugWebServicesSoap getWeatherBugWebServicesSoap12() {
        return super.getPort(new QName("http://api.wxbug.net/", "WeatherBugWebServicesSoap12"), WeatherBugWebServicesSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WeatherBugWebServicesSoap
     */
    @WebEndpoint(name = "WeatherBugWebServicesSoap12")
    public WeatherBugWebServicesSoap getWeatherBugWebServicesSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://api.wxbug.net/", "WeatherBugWebServicesSoap12"), WeatherBugWebServicesSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEATHERBUGWEBSERVICES_EXCEPTION!= null) {
            throw WEATHERBUGWEBSERVICES_EXCEPTION;
        }
        return WEATHERBUGWEBSERVICES_WSDL_LOCATION;
    }

}
